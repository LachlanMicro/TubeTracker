<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2Q==
</value>
  </data>
</root>